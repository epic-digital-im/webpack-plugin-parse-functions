
// auto-generated file for actions
import P from 'parse';
import { ActionTrigger, processActionTriggers } from './helpers';

<% Object.entries(it.service.hooks).forEach(([hookName, hooks]) => { %>
  <% if (hooks.config) { %>
    <%~ it.helpers.createImportFromFilename(hooks.config, `hook_${hookName}_`) %>
  <% } %>

  <% hooks.hooks.forEach((hookPath) => { %>
    <%~ it.helpers.createImportFromFilename(hookPath, `hook_${hookName}_`) %>
  <% }) %>
<% }) %>

<% it.service.triggers.forEach((triggerPath) => { %>
  <%~ it.helpers.createImportFromFilename(triggerPath, 'trigger_') %>
<% }) %>

<% it.service.functions.forEach((functionPath) => { %>
  <%~ it.helpers.createImportFromFilename(functionPath) %>
<% }) %>

<% it.service.jobs.forEach((jobPath) => { %>
  <%~ it.helpers.createImportFromFilename(jobPath, 'job_') %>
<% }) %>


/* === TYPES === */
type ParseType = typeof P;

export interface <%~ it.service.className %>Attributes {
  <% Object.entries(it.service.schema.fields).forEach(([fieldName, field]) => { %>
    <%~ fieldName %><% if (!field.required) { %>?<% } %>: <%~ it.helpers.mapSchemaTypeToTSType(field) %>,
  <% }) %>
}

export type <%~ it.service.className %> = P.Object<<%~ it.service.className %>Attributes>;


/* === CONSTANTS === */
const defaultFunctionConfig = {
  requireUser: true,
  requireAnyUserRoles: ['editor'],
};

const defaultJobConfig = {
  requireUser: true,
  requireAnyUserRoles: ['editor'],
  requireMaster: true,
};

const defaultTriggerConfig = {
  requireUser: true,
  requireAnyUserRoles: ['editor'],
  requireMaster: true,
};


/* === SERVICE === */
const service = (Parse: ParseType) => {
  // HOOKS
  <% Object.entries(it.service.hooks).forEach(([hookName, hooks]) => { %>
    <% if (hooks.hooks.length > 0) { %>
      Parse.Cloud.<%~ hookName %><<%~ it.service.className %>>('<%~ it.service.className %>', async (request) => {
        <% hooks.hooks.forEach((hookPath) => { %>
          await <%~ it.helpers.getSanitizedFunctionName(hookPath, `hook_${hookName}_`) %>(request);
        <% }) %>

        await processActionTriggers<<%~ it.service.className %>>({
          object: request.object,
          triggerName: '<%~ hookName %>',
        });
      }<% if (hooks.config) { %>, <%~ it.helpers.getSanitizedFunctionName(hooks.config, `hook_${hookName}_`) %><% } %>);
    <% } %>
    
  <% }) %>

  // FUNCTIONS
  <% it.service.functions.forEach((functionPath) => { %>
    Parse.Cloud.define(
      '<%~ it.helpers.getSanitizedFunctionName(functionPath) %>',
      <%~ it.helpers.getSanitizedFunctionName(functionPath) %>,
      require('<%~ functionPath %>')?.config || defaultFunctionConfig
    );
  <% }) %>
  
  // JOBS
  <% it.service.jobs.forEach((jobPath) => { %>
    Parse.Cloud.job(
      '<%~ it.helpers.getSanitizedFunctionName(jobPath) %>',
      <%~ it.helpers.getSanitizedFunctionName(jobPath, 'job_') %>
    );
  <% }) %>
  
  // TRIGGER HANDLERS
  <% it.service.triggers.forEach((triggerPath) => { %>
    Parse.Cloud.define(
      '<%~ it.helpers.getSanitizedFunctionName(triggerPath) %>',
      <%~ it.helpers.getSanitizedFunctionName(triggerPath, 'trigger_') %>,
      require('<%~ triggerPath %>')?.config || defaultTriggerConfig
    );
  <% }) %>
};

export default service;
