import type P from 'parse';
import { registerParseInstance } from './helpers';
import { ParseFunctionConfig } from './types';

<% Object.entries(it.services).forEach(([serviceName, service]) => { %>
  import <%~ serviceName %>, { functions as <%~ serviceName %>functions, jobs as <%~ serviceName %>jobs } from './<%~ serviceName %>';
<% }) %>

export const functions = {
  <% Object.entries(it.services).forEach(([serviceName, service]) => { %>
  ...<%~ serviceName %>functions,
  <% }) %>
}

export const jobs = {
  <% Object.entries(it.services).forEach(([serviceName, service]) => { %>
  ...<%~ serviceName %>jobs,
  <% }) %>
}

type ParseType = typeof P;


/* === INITIALIZER === */
const initialize = (Parse: ParseType, config?: ParseFunctionConfig) => {
  registerParseInstance(Parse);
  <% Object.entries(it.services).forEach(([serviceName, service]) => { %>
  <%~ serviceName %>(Parse<% if (service.config) { %>, config?.<%~ serviceName %> <% } %>);
  <% }) %>
}

export default initialize;
